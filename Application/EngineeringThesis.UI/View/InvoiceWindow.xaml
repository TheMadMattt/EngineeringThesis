<Window x:Class="EngineeringThesis.UI.View.InvoiceWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EngineeringThesis.UI.View"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        xmlns:resx="clr-namespace:EngineeringThesis.UI.Resources"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="{x:Static resx:InvoiceWindow.Invoice}" Height="600" Width="850" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="CanResize" SizeChanged="Window_SizeChanged">
    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="0"
            ResizeBorderThickness="10" />
    </WindowChrome.WindowChrome>
    <Window.CommandBindings>
        <CommandBinding Command="Save" CanExecute="SaveCommand_CanExecute" Executed="SaveCommand_Executed"></CommandBinding>
        <CommandBinding Command="Print" CanExecute="CreatePDF_CanExecute" Executed="CreatePDF_Executed"></CommandBinding>
        <CommandBinding Command="Replace" CanExecute="CreatePDF_CanExecute" Executed="CreateCorrectionPDF_Executed"></CommandBinding>
    </Window.CommandBindings>
    <Window.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="CenterAlignment">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="WrapCenterColumn">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Foreground" Value="Black"/>
        </Style>
    </Window.Resources>
    <materialDesign:DialogHost Identifier="InvoiceDialogHost" Name="InvoiceDialogHost">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40px"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Name="ToolbarGrid" Grid.Row="0" Background="{DynamicResource PrimaryHueMidBrush}" MouseDown="ToolbarGrid_MouseDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Name="TitleLabel" Grid.Column="0" Margin="5" Foreground="White" FontSize="15" Content="{Binding Title,RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"></Label>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                    <Button Name="MinimizeButton" Width="30px" Height="30px" Margin="0,0,5,0" Background="{x:Null}"
                                Style="{StaticResource MaterialDesignIconButton}" Click="MinimizeButton_Click">
                        <materialDesign:PackIcon Kind="WindowMinimize" Foreground="White"></materialDesign:PackIcon>
                    </Button>
                    <Button Name="MaximizeButton" Width="30px" Height="30px" Margin="0,0,5,0" Background="{x:Null}"
                                Style="{StaticResource MaterialDesignIconButton}" Click="MaximizeButton_Click">
                        <materialDesign:PackIcon Name="MaximizeWindowIcon" Kind="WindowMaximize" Foreground="White"></materialDesign:PackIcon>
                    </Button>
                    <Button Name="CloseButton" Width="30px" Height="30px" Margin="0,0,5,0" Background="{x:Null}"
                                Style="{StaticResource MaterialDesignIconButton}" Click="CloseButton_Click">
                        <materialDesign:PackIcon Kind="Close" Foreground="White"></materialDesign:PackIcon>
                    </Button>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="{x:Static resx:InvoiceWindow.Contractor}" Grid.Column="0" Grid.Row="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <ComboBox Name="ContractorComboBox" VerticalAlignment="Top" SelectedIndex="0" Grid.Column="0" Margin="0,0,10,0" 
                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}" StaysOpenOnEdit="True" 
                                          materialDesign:HintAssist.Hint="{x:Static resx:InvoiceWindow.Search}" IsTextSearchEnabled="True" TextSearch.TextPath="Name" 
                                          IsEditable="True" SelectionChanged="ContractorComboBox_SelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Name="AddContractorBtn" Grid.Column="1" Width="25" Height="25" Margin="0,0,5,0" Style="{StaticResource MaterialDesignFloatingActionButton}" Click="AddContractorBtn_Click">
                                    <materialDesign:PackIcon Kind="Add" Foreground="White"></materialDesign:PackIcon>
                                </Button>
                                <Button Name="EditContractorBtn" Grid.Column="2" Width="25" Height="25" Style="{StaticResource MaterialDesignFloatingActionButton}" Click="EditContractorBtn_Click" >
                                    <materialDesign:PackIcon Kind="Edit" Foreground="White"></materialDesign:PackIcon>
                                </Button>
                            </Grid>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1" VerticalAlignment="Top">
                                <Grid Margin="0,10,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="2*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" 
                                   Content="{x:Static resx:InvoiceWindow.Business}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedContractor.Name}"/>
                                    <Label Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" 
                                   Content="{x:Static resx:InvoiceWindow.Address}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" TextWrapping="Wrap">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} {1} &#x0a;{2} {3}">
                                                <Binding Path="SelectedContractor.ZipCode" />
                                                <Binding Path="SelectedContractor.City" />
                                                <Binding Path="SelectedContractor.Street"></Binding>
                                                <Binding Path="SelectedContractor.StreetNumber"></Binding>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <Label Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.NIP}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedContractor.NIP}"/>
                                    <Label Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.Regon}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedContractor.REGON}"/>
                                    <Label Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.BankAccountNumber}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="4" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedContractor.BankAccountNumber}"/>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="{x:Static resx:InvoiceWindow.Seller}" Grid.Column="1" Grid.Row="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <ComboBox Name="SellerComboBox" VerticalAlignment="Top" SelectedIndex="0" Grid.Column="0" Margin="0,0,10,0"
                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}" 
                                          materialDesign:HintAssist.Hint="{x:Static resx:InvoiceWindow.Search}" IsTextSearchEnabled="True" TextSearch.TextPath="Name" 
                                          IsEditable="True" SelectionChanged="SellerComboBox_SelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Name="AddSellerBtn" Grid.Column="1" Width="25" Height="25" Margin="0,0,5,0" Style="{StaticResource MaterialDesignFloatingActionButton}" Click="AddSellerBtn_Click">
                                    <materialDesign:PackIcon Kind="Add" Foreground="White"></materialDesign:PackIcon>
                                </Button>
                                <Button Name="EditSellerBtn" Grid.Column="2" Width="25" Height="25" Style="{StaticResource MaterialDesignFloatingActionButton}" Click="EditSellerBtn_Click" >
                                    <materialDesign:PackIcon Kind="Edit" Foreground="White"></materialDesign:PackIcon>
                                </Button>
                            </Grid>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="1" VerticalAlignment="Top">
                                <Grid Margin="0,10,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="2*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.Business}"></Label>
                                    <TextBlock Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedSeller.Name}"/>
                                    <Label Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.Address}"></Label>
                                    <TextBlock Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" TextWrapping="Wrap">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} {1} &#x0a;{2} {3}">
                                                <Binding Path="SelectedSeller.ZipCode" />
                                                <Binding Path="SelectedSeller.City" />
                                                <Binding Path="SelectedSeller.Street"></Binding>
                                                <Binding Path="SelectedSeller.StreetNumber"></Binding>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <Label Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.NIP}"></Label>
                                    <TextBlock Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedSeller.NIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.Regon}"></Label>
                                    <TextBlock Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedSeller.REGON}"/>
                                    <Label Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right" Content="{x:Static resx:InvoiceWindow.BankAccountNumber}">
                                    </Label>
                                    <TextBlock Grid.Column="1" Grid.Row="4" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedSeller.BankAccountNumber}"/>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                    <Grid Grid.Column="2" Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="2*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <GroupBox Header="{x:Static resx:InvoiceWindow.InvoiceDate}" Grid.Row="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <DatePicker Name="InvoiceDatePicker" Grid.Row="0" SelectedDate="{Binding Invoice.InvoiceDate}" SelectedDateChanged="InvoiceDatePicker_SelectedDateChanged" Margin="0,0,0,15"></DatePicker>
                                <CheckBox Name="IsProformaCheckBox" Grid.Row="1" IsChecked="{Binding Invoice.IsProformaInvoice}" Content="{x:Static resx:InvoiceWindow.ProformaInvoice}"></CheckBox>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="{x:Static resx:InvoiceWindow.Payments}" Grid.Row="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Label Grid.Column="0" Grid.Row="0" Content="{x:Static resx:InvoiceWindow.Payment}"></Label>
                                <ComboBox Name="PaymentTypeComboBox" Grid.Column="1" Grid.Row="0" SelectedIndex="0" SelectionChanged="PaymentTypeComboBox_SelectionChanged" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Label Grid.Column="0" Grid.Row="1" Content="{x:Static resx:InvoiceWindow.Deadline}"></Label>
                                <DatePicker Name="PaymentDeadlineDatePicker" SelectedDate="{Binding Invoice.PaymentDeadline}" Grid.Column="1" Grid.Row="1" SelectedDateChanged="PaymentDeadlineDatePicker_SelectedDateChanged"></DatePicker>
                                <Label Grid.Column="0" Grid.Row="2" Content="{x:Static resx:InvoiceWindow.Paid}"></Label>
                                <CheckBox Name="IsPaidCheckBox" IsChecked="False" Grid.Column="1" Grid.Row="2" Checked="IsPaidCheckBox_Checked" Unchecked="IsPaidCheckBox_Unchecked"></CheckBox>
                                <Label Grid.Column="0" Grid.Row="3" Content="{x:Static resx:InvoiceWindow.When}"></Label>
                                <DatePicker Name="PaidDatePicker" SelectedDate="{Binding Invoice.PaymentDate}" Grid.Column="1" Grid.Row="3" IsEnabled="{Binding ElementName=IsPaidCheckBox, Path=IsChecked}" SelectedDateChanged="PaidDatePicker_SelectedDateChanged"></DatePicker>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
                <Grid Grid.Row="1">
                    <DataGrid Name="InvoiceItemsDataGrid" AutoGenerateColumns="False" 
                                  IsReadOnly="True" ScrollViewer.CanContentScroll="False" SelectionMode="Single"
                                  HorizontalScrollBarVisibility="Auto" Grid.Column="0" SelectedIndex="0">
                            <DataGrid.Columns >
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemName}" Binding="{Binding Name}" MaxWidth="300"
                                                    ElementStyle="{StaticResource WrapCenterColumn}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemPKWiU}" Binding="{Binding PKWiU}"  
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemUnit}" Binding="{Binding Unit}" 
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemNetPrice}" Binding="{Binding NetPrice, StringFormat={}{0:C2} zł}" 
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemAmount}" Binding="{Binding Amount}" 
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemVAT}" Binding="{Binding VAT, StringFormat={}{0}%}" 
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemNetSum}" Binding="{Binding NetSum, StringFormat={}{0:C2} zł}" 
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemGrossSum}" Binding="{Binding GrossSum, StringFormat={}{0:C2} zł}" 
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                                <DataGridTextColumn Header="{x:Static resx:InvoiceWindow.ItemVATSum}" Binding="{Binding VATSum, StringFormat={}{0:C2} zł}" 
                                        ElementStyle="{StaticResource CenterAlignment}"/>
                            </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Comments}" Margin="5" Foreground="Gray"/>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                        <DataGrid.ContextMenu>
                            <ContextMenu Margin="0">
                                <MenuItem Name="EditMenuItem" Header="{x:Static resx:InvoiceWindow.EditItem}" Icon="{materialDesign:PackIcon Edit}" Click="EditMenuItem_Click"/>
                                <MenuItem Name="DeleteMenuItem" Header="{x:Static resx:InvoiceWindow.DeleteItem}" Icon="{materialDesign:PackIcon Delete}" Click="DeleteMenuItem_Click"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <CheckBox Name="CommentsCheckBox" Grid.Column="0" Margin="5">
                        <TextBlock Text="{x:Static resx:InvoiceWindow.CommentsCheckBox}" TextWrapping="Wrap"></TextBlock>
                    </CheckBox>
                    <CheckBox Name="InvoicePersonCheckBox" Grid.Column="1" Margin="5">
                        <TextBlock Text="{x:Static resx:InvoiceWindow.InvoicePersonCheckBox}" TextWrapping="Wrap"></TextBlock>
                    </CheckBox>
                    <CheckBox Name="PickupPersonCheckBox" Grid.Column="2" Margin="5">
                        <TextBlock Text="{x:Static resx:InvoiceWindow.PickupPersonCheckBox}" TextWrapping="Wrap"></TextBlock>
                    </CheckBox>
                </Grid>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBox Name="CommentsTextBox" TextWrapping="Wrap" Grid.Column="0" AcceptsReturn="True" Margin="5" Text="{Binding Invoice.Comments}"
                             materialDesign:HintAssist.Hint="{x:Static resx:InvoiceWindow.Comments}" FontSize="15" Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
                             VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"></TextBox>
                    <materialDesign:PopupBox
                            Name="InvoiceItemAction"
                            Grid.Column="1"
                            Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                            PlacementMode="TopAndAlignCentres"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right"
                            ToolTipService.Placement="Left"
                            ToolTip="{x:Static resx:InvoiceWindow.Options}"
                            Width="50px" PopupMode="Click" StaysOpen="False"
                            Height="50px">
                        <StackPanel Name="StackPanel">
                            <Button Name="AddItemBtn" Margin="0,0,0,10" Click="AddItemBtn_Click" ToolTip="{x:Static resx:InvoiceWindow.AddItem}" 
                                    Background="{DynamicResource PrimaryHueMidBrush}">
                                <materialDesign:PackIcon Kind="Add" Foreground="White"></materialDesign:PackIcon>
                            </Button>
                            <Button Name="EditItemBtn" Margin="0,0,0,10" Click="EditItemBtn_Click" ToolTip="{x:Static resx:InvoiceWindow.EditItem}" 
                                    Background="{DynamicResource PrimaryHueMidBrush}">
                                <materialDesign:PackIcon Kind="Edit" Foreground="White"></materialDesign:PackIcon>
                            </Button>
                            <Button Name="DeleteItemBtn" Margin="0,0,0,10" ToolTip="{x:Static resx:InvoiceWindow.DeleteItem}" 
                                    Click="DeleteItemBtn_Click" Background="{DynamicResource PrimaryHueMidBrush}">
                                <materialDesign:PackIcon Kind="Delete" Foreground="White"></materialDesign:PackIcon>
                            </Button>
                            <Button Name="EditingInvoiceBtn" ToolTip="{x:Static resx:InvoiceWindow.EditInvoice}" 
                                    Background="{DynamicResource PrimaryHueMidBrush}"
                                    Visibility="Collapsed" IsEnabled="False" Click="EditingInvoiceBtn_Click">
                                <materialDesign:PackIcon Kind="Edit" Foreground="White"></materialDesign:PackIcon>
                            </Button>
                            <Button Name="CreatePdfBtn" ToolTip="{x:Static resx:InvoiceWindow.CreatePDF}" Command="Print" 
                                    Background="{DynamicResource PrimaryHueMidBrush}">
                                <materialDesign:PackIcon Kind="PdfBox" Foreground="White"></materialDesign:PackIcon>
                            </Button>
                            <Button Name="CreateCorrectionPdfBtn" ToolTip="{x:Static resx:InvoiceWindow.CreateCorrectionPDF}" Command="Replace" 
                                    Background="{DynamicResource PrimaryHueMidBrush}">
                                <materialDesign:PackIcon Kind="PdfBox" Foreground="White"></materialDesign:PackIcon>
                            </Button>
                            <Button Name="SaveInvoiceBtn" ToolTip="{x:Static resx:InvoiceWindow.SaveInvoice}" Command="Save" 
                                    Background="{DynamicResource PrimaryHueMidBrush}">
                                <materialDesign:PackIcon Kind="ContentSave" Foreground="White"></materialDesign:PackIcon>
                            </Button>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>
